@inherits XmlDocumentaionComponentBase
@code {

    List<PropertyComment> propertyCommentsOrderByParameter;
    bool isBusy;

    protected async override Task OnInitializedAsync()
    {
        isBusy = true;
        List<PropertyComment> unsortedpropertyComments = new List<PropertyComment>();
        await Task.Run(() => unsortedpropertyComments = XmlDocumentationReader.GetPropertyComments(Type));
        propertyCommentsOrderByParameter = unsortedpropertyComments
                                            .OrderByDescending(pcomment =>
                                                pcomment.PropertyInfo.GetCustomAttributes(typeof(ParameterAttribute), true).Any())
                                            .ToList();
        isBusy = false;
    }
}
@if (isBusy)
{
    <p><TypeIcon IconKey="code"></TypeIcon> Properties are loading...</p>
}
else
{
    <div class="mbsl-responsive">
        <ul class="mbsl-ul" style="font-family:Consolas;">
            @foreach (var propertyComment in propertyCommentsOrderByParameter)
            {
                <li>
                    @if (CommentDisplayType.Equals(CommentDisplayType.OnHover))
                    {
                            @if (!string.IsNullOrWhiteSpace(propertyComment.Summary))
                            {
                                <TypeTip>
                                    <ChildContent>
                                        <PropertyLabel PropertyInfo="propertyComment.PropertyInfo"></PropertyLabel>
                                    </ChildContent>
                                    <TypeTipContent>
                                        <p>@propertyComment.Summary</p>
                                    </TypeTipContent>
                                </TypeTip>
                            }
                            else
                            {
                                <PropertyLabel PropertyInfo="propertyComment.PropertyInfo"></PropertyLabel>
                            }
                    }
                    else if (CommentDisplayType.Equals(CommentDisplayType.Ever))
                    {
                        <div style="display:flex; justify-content:space-between;">

                            <PropertyLabel PropertyInfo="propertyComment.PropertyInfo"></PropertyLabel>
                            @if (!string.IsNullOrWhiteSpace(propertyComment.Summary))
                            {
                                <div style="width:30%"><SummaryComment>@propertyComment.Summary</SummaryComment></div>
                            }
                        </div>
                    }
                    else
                    {
                        <PropertyLabel PropertyInfo="propertyComment.PropertyInfo"></PropertyLabel>
                    }
                </li>
            }
        </ul>
    </div>
}