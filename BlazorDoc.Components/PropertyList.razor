@inherits XmlDocumentaionComponentBase
@code {
    List<PropertyComment> propertyCommentsOrderByParameter;
    bool isBusy;

    protected async override Task OnInitializedAsync()
    {
        isBusy = true;
        List<PropertyComment> unsortedpropertyComments=new List<PropertyComment>();
        await Task.Run(() => unsortedpropertyComments = XmlDocumentationReader.GetPropertyComments(Type));
        propertyCommentsOrderByParameter = unsortedpropertyComments
                                            .OrderByDescending(pcomment => 
                                                pcomment.PropertyInfo.GetCustomAttributes(typeof(ParameterAttribute), true).Any())
                                            .ToList();
        isBusy = false;
    }
}
@if (isBusy)
{
    <p><TypeIcon IconKey="code"></TypeIcon> Properties are loading...</p>
}
else
{ 
<div class="mbsl-responsive">
    <ul class="mbsl-ul" style="font-family:Consolas;">
        @foreach (var propertyComment in propertyCommentsOrderByParameter)
        {
            <li>
                @if (!string.IsNullOrWhiteSpace(propertyComment.Summary))
                {
                    <p class="summary">@propertyComment.Summary</p>
                }
                <PropertyLabel PropertyInfo="propertyComment.PropertyInfo"></PropertyLabel>
            </li>
        }
    </ul>
</div>
}